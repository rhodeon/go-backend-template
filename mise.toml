[env]
# Load environment variables from .env file
_.file = ".env"

SQLC_DB_HOST = "localhost"
SQLC_DB_PORT = "10984" # 10984 is a randomly chosen number that should "hopefully" not conflict with any port in use.
SQLC_DB_USER = "sqlc_user"
SQLC_DB_PASS = "sqlc_password"
SQLC_DB_NAME = "sqlc_db"

[tools]
"go" = "1.25.0"
"golangci-lint" = "v2.4.0"
"aqua:sqlc-dev/sqlc" = "1.29.0"
"aqua:quarylabs/sqruff" = "v0.29.3"

[task_config]
includes = [
    "scripts/mise_tasks"
]

[tasks.default]
description = "Display all available tasks"
# `quiet = true` needs to be added to every task to suppress the command running and show only the echoed messages.
# It would be more convenient to add it as a global setting but doing that unfortunately prevents tool installation progress from being displayed.
quiet = true
run = [
    "echo 'For first-time setup, run: mise init'",
    "echo 'Available tasks:'",
    "mise tasks"
]

[tasks.init]
description = "First-time setup after cloning the repository"
quiet = true
run = [
    "echo 'Configuring git hooks directory...'",
    "git config core.hooksPath .git-hooks"
]

[tasks.test]
description = "Run all tests in codebase"
quiet = true
run = [
    "echo 'Running tests...'",
    "go test ./..."
]

[tasks.tidy]
description = "Format the codebase uniformly and vendor dependencies"
quiet = true
run = [
    "echo 'Tidying dependencies...'",
    "go mod tidy -v",
    "go mod vendor",
    "echo 'Formatting Go codebase...'",
    "golangci-lint fmt",
    "echo 'Formatting SQL migration files...'",
    "sqruff fix ./cmd/migrations/schema",
    "echo 'Formatting sqlc queries...'",
    "sqruff fix ./repositories/database/postgres/queries"
]

[tasks.vet]
description = "Lint and vet Go codebase and SQL queries"
depends = ["sqlc_setup"]
depends_post = ["sqlc_teardown"]
quiet = true
run = [
    "echo 'Vetting Go code...'",
    "go mod verify",
    "golangci-lint run ./...",
    "echo 'Linting SQL migration queries...'",
    "sqruff lint ./cmd/migrations/schema",
    "echo 'Vetting sqlc queries...'",
    "./sqlc.sh",
    "sqlc diff",
    "sqlc vet",
]

[tasks.sqlc]
description = "Regenerate sqlc queries"
depends = ["sqlc_setup"]
depends_post = ["sqlc_teardown"]
quiet = true
run = [
    "echo 'Vetting sqlc queries...'",
    "sqlc vet",
    #
    "echo 'Regenerating sqlc queries...'",
    "sqlc generate"
]


[tasks.sqlc_setup.env]
MIGRATION_DB_HOST = "{{env.SQLC_DB_HOST}}"
MIGRATION_DB_PORT = "{{env.SQLC_DB_PORT}}"
MIGRATION_DB_USER = "{{env.SQLC_DB_USER}}"
MIGRATION_DB_PASS = "{{env.SQLC_DB_PASS}}"
MIGRATION_DB_NAME = "{{env.SQLC_DB_NAME}}"

[tasks.sqlc_setup]
description = "Set up the Postgres container to be used for sqlc operations"
quiet = true
hide = true
run = [
    "echo 'Formatting SQL queries...'",
    "sqruff fix ./repositories/database/postgres/queries",
    #
    "echo 'Setting up sqlc Postgres container...'",
    # The Docker container is always dropped at the start in case it wasn't properly dropped after the last sqlc run.
    "docker compose --file docker-compose.yaml down --volumes postgres-sqlc",
    "docker compose --file docker-compose.yaml up --wait postgres-sqlc",
    #
    "echo 'Running migrations...'",
    "cd ./cmd/migrations && go run . up",
    #
    "echo 'Regenerating sqlc.yaml...'",
    "./sqlc.sh"
]

[tasks.sqlc_teardown]
description = "Drop the Postgres container used for sqlc operations"
quiet = true
hide = true
run = [
    "echo 'Dropping sqlc Postgres container...'",
    "docker compose --file docker-compose.yaml down --volumes postgres-sqlc",
]