services:
  postgres:
    image: postgres:16
    restart: unless-stopped

    env_file:
      - .env

    environment:
      POSTGRES_USER: ${MIGRATION_DB_USER}
      POSTGRES_PASSWORD: ${MIGRATION_DB_PASS}
      POSTGRES_DB: ${MIGRATION_DB_NAME}

    ports:
      - "${API_DB_PORT:-5432}:5432"

    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./scripts/docker/postgres/init:/docker-entrypoint-initdb.d

    command: [ "postgres", "-c", "log_statement=all" ]

  redis:
    image: redis:8.2.0
    restart: unless-stopped

    ports:
      - "${API_CACHE_PORT:-6379}:6379"

  aspire-dashboard:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:9.1
    restart: unless-stopped

    environment:
      DOTNET_DASHBOARD_UNSECURED_ALLOW_ANONYMOUS: "true"

    ports:
      - "18888:18888"
      - "${API_OTEL_OTLP_GRPC_PORT:-4317}:18889"

    expose:
      - "18889"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.135.0

    env_file: ".env"

    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
      - ./cmd/api/api.log:/var/log/myapp/api.log:ro

    depends_on:
      - aspire-dashboard

  postgres-sqlc:
    image: postgres:16
    container_name: postgres-sqlc

    environment:
      POSTGRES_USER: ${SQLC_DB_USER}
      POSTGRES_PASSWORD: ${SQLC_DB_PASS}
      POSTGRES_DB: ${SQLC_DB_NAME}

    ports:
      - "${SQLC_DB_PORT}:5432"

    command: [ "postgres", "-c", "log_statement=all" ]

volumes:
  pg_data: