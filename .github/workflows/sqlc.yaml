name: Sqlc operations

on:
  push:
    branches:
      - '*'

env:
  POSTGRES_HOST: "localhost"
  POSTGRES_PORT: 5432
  POSTGRES_USER: "test_user"
  POSTGRES_PASSWORD: "test_pass"
  POSTGRES_DB: "test_db"

  MIGRATION_DB_HOST: "localhost"
  MIGRATION_DB_PORT: 5432
  MIGRATION_DB_USER: "test_user"
  MIGRATION_DB_PASS: "test_pass"
  MIGRATION_DB_NAME: "test_db"

  # The API_DB envs are needed for populating sqlc.sh.
  API_DB_HOST: "localhost"
  API_DB_PORT: 5432
  API_DB_USER: "test_user"
  API_DB_PASS: "test_pass"
  API_DB_NAME: "test_db"

jobs:
  sqlc:
    name: Run sqlc diff and vet

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16

        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}

        ports:
          - 5432:5432

        # Set health checks to wait until Postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Install sqlc
        uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: "1.29.0"

      - name: Install Postgres client
        run: |
          sudo apt update
          sudo apt install -y postgresql-client

      - name: Verify Postgres connection
        run: PGPASSWORD=${{ env.POSTGRES_PASSWORD }} psql -h ${{ env.POSTGRES_HOST }} -U ${{ env.POSTGRES_USER }} -d ${{ env.POSTGRES_DB }} -c "\l"

      - name: Run database migrations
        run: |
          cd ./cmd/migrations
          go run . up

      - name: Compare existing vs pending generated code
        run: sqlc diff

      - name: Vet queries
        run: sqlc vet
